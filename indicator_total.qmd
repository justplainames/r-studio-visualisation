---
title: "Indicator_total"
format: html
editor: visual
---

```{r}
#| warning: false
#| message: false
# install.packages("devtools")  # Install devtools package if not already installed
# devtools::install_version("knitr", version = "1.42")
library(tidyverse)
library(readxl)
library(rmapshaper)
library(sf)
library(mapview)
library(tmap)
library(lintr)
library(leaflet)
library(RColorBrewer)
library(DT)
```

# Import Indicator Files

```{r}
#mortality_rate_attributed_to_unsafe_water
mortality_rate_unsafe_water <- read_csv("data/indicator_3.9.2.csv",show_col_types = FALSE)

#Proportion_of_population_using_safely_managed_drinking_water_services
proportion_of_safe_water<- read_csv("data/indicator_6.2.1.csv",show_col_types = FALSE)

#mortality_rate_unintentional_poisoning
mortality_rate_unintentional_poisoning <- read_csv("data/indicator_3.9.3.csv",show_col_types = FALSE)

#proportion-of-population-with-basic-handwashing-facilities-on-premises-by-urban-rural-percent
population_with_basic_handwashing_facilities<- read_csv("data/indicator_6.2.1.csv",show_col_types = FALSE)
```

# Extracting Important Data

## Mortality rate with unsafe water

```{r}
mortality_rate_unsafe_water <- select(
  mortality_rate_unsafe_water,
  code = 'geoAreaCode',
  country = 'geoAreaName',
  region = 'parentName',
  iso = 'ISO3',
  MR_unsafe_water = 'latest_value'
)

mortality_rate_unsafe_water <- mortality_rate_unsafe_water %>%
  distinct()

mortality_rate_unsafe_water
```

## Proportion of proper sanitation facilities

```{r}
proportion_of_safe_water <- select(
  proportion_of_safe_water,
  code = 'geoAreaCode',
  country = 'geoAreaName',
  region = 'parentName',
  iso = 'ISO3',
  urbanisation = "location_desc",
  sanitation_access = "value_2019",
)

# Remove duplicates
proportion_of_safe_water <- proportion_of_safe_water%>%
  distinct()

proportion_of_safe_water
```

## Mortality rate with unintentional poisoning

```{r}
#| label: select specific columns for mortality rate
mortality_rate_unintentional_poisoning <- select(
  mortality_rate_unintentional_poisoning,
  code = 'geoAreaCode',
  country = 'geoAreaName',
  region = 'parentName',
  iso = 'ISO3',
  gender = 'sex_desc',
  MR_poisoning = 'value_2019'
)

# drop rows if contains at least one NA value
mortality_rate_unintentional_poisoning <- na.omit(mortality_rate_unintentional_poisoning)

# Remove duplicates
mortality_rate_unintentional_poisoning <- mortality_rate_unintentional_poisoning%>%
  distinct()

#check for empty row
any(is.na(mortality_rate_unintentional_poisoning))

mortality_rate_unintentional_poisoning
```

## Proportion of hand washing facilities

```{r}
#| label: select specific columns for population with basic handwashing facilities
population_with_basic_handwashing_facilities <- select(
  population_with_basic_handwashing_facilities,
  code = 'geoAreaCode',
  country = 'geoAreaName',
  region = 'parentName',
  iso = 'ISO3',
  urbanisation = 'location_desc',
  handwash_access = 'value_2019'
)

# drop rows if contains at least one NA value
population_with_basic_handwashing_facilities <- na.omit(population_with_basic_handwashing_facilities)

# Remove duplicates
population_with_basic_handwashing_facilities <- population_with_basic_handwashing_facilities%>%
  distinct()

#check for empty row
any(is.na(mortality_rate_unintentional_poisoning))

population_with_basic_handwashing_facilities
```

## Joining all 4 indicators

```{r}

countries_tb <- left_join(
  mortality_rate_unintentional_poisoning,
  population_with_basic_handwashing_facilities,
  by = join_by(country, iso)
)
  
countries_tb <- left_join(
  countries_tb,
  mortality_rate_unsafe_water,
  by = join_by(iso)
) 
  
countries_tb <- left_join(
  countries_tb,
  proportion_of_safe_water,
  by = join_by(iso, urbanisation)
) |>  
  mutate(
    iso = case_match(
      iso,
      "COD" ~ "ZAR",
      "ROU" ~ "ROM",
      "TLS" ~ "TMP",
      "XKX" ~ "KSV",
      .default = iso
    )
  )

countries_tb
```

## Clean data

Remove certain columns and rename column for cleaner a look

```{r}
clean_datatable <- select(countries_tb, 
                          -code.y, -code.x,
                          -region.y, -region.x,
                          -code.x.x, code.y.y, 
                          -country.x, -country.y,
                          -region.x.x, -region.y.y, 
                          -iso)  
# Rearrange
clean_datatable <- clean_datatable %>%
  select(country, 
         urbanisation, 
         gender, 
         handwash_access,  
         sanitation_access, 
         MR_poisoning, 
         MR_unsafe_water)

datatable(clean_datatable)
```
