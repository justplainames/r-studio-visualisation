---
title: "Indicator_total"
format: html
editor: visual
---

```{r}
#| warning: false
#| message: false
# install.packages("devtools")  # Install devtools package if not already installed
# devtools::install_version("knitr", version = "1.42")
library(tidyverse)
library(readxl)
library(rmapshaper)
library(sf)
library(mapview)
library(tmap)
library(lintr)
library(leaflet)
library(RColorBrewer)
library(DT)
library(GGally)
```

# Import Indicator Files

```{r}
#mortality_rate_attributed_to_unsafe_water
mortality_rate_unsafe_water <- read_csv("data/indicator_3.9.2.csv",show_col_types = FALSE)

#Proportion_of_population_using_safely_managed_drinking_water_services
proportion_of_safe_water<- read_csv("data/indicator_6.2.1.csv",show_col_types = FALSE)

#mortality_rate_unintentional_poisoning
mortality_rate_unintentional_poisoning <- read_csv("data/indicator_3.9.3.csv",show_col_types = FALSE)

#proportion-of-population-with-basic-handwashing-facilities-on-premises-by-urban-rural-percent
population_with_basic_handwashing_facilities<- read_csv("data/indicator_6.2.1.csv",show_col_types = FALSE)
```

# Extracting Important Data

## Mortality rate with unsafe water

```{r}
mortality_rate_unsafe_water <- select(
  mortality_rate_unsafe_water,
  code = 'geoAreaCode',
  country = 'geoAreaName',
  region = 'parentName',
  iso = 'ISO3',
  MR_unsafe_water = 'latest_value'
)

mortality_rate_unsafe_water <- mortality_rate_unsafe_water %>%
  distinct()

mortality_rate_unsafe_water
```

## Proportion of proper sanitation facilities

```{r}
proportion_of_safe_water <- select(
  proportion_of_safe_water,
  code = 'geoAreaCode',
  country = 'geoAreaName',
  region = 'parentName',
  iso = 'ISO3',
  urbanisation = "location_desc",
  sanitation_access = "value_2019",
)

# Remove duplicates
proportion_of_safe_water <- proportion_of_safe_water%>%
  distinct()

proportion_of_safe_water
```

## Mortality rate with unintentional poisoning

```{r}
#| label: select specific columns for mortality rate
mortality_rate_unintentional_poisoning <- select(
  mortality_rate_unintentional_poisoning,
  code = 'geoAreaCode',
  country = 'geoAreaName',
  region = 'parentName',
  iso = 'ISO3',
  gender = 'sex_desc',
  MR_poisoning = 'value_2019'
)

# drop rows if contains at least one NA value
mortality_rate_unintentional_poisoning <- na.omit(mortality_rate_unintentional_poisoning)

# Remove duplicates
mortality_rate_unintentional_poisoning <- mortality_rate_unintentional_poisoning%>%
  distinct()

#check for empty row
any(is.na(mortality_rate_unintentional_poisoning))

mortality_rate_unintentional_poisoning
```

## Proportion of hand washing facilities

```{r}
#| label: select specific columns for population with basic handwashing facilities
population_with_basic_handwashing_facilities <- select(
  population_with_basic_handwashing_facilities,
  code = 'geoAreaCode',
  country = 'geoAreaName',
  region = 'parentName',
  iso = 'ISO3',
  urbanisation = 'location_desc',
  handwash_access = 'value_2019'
)

# drop rows if contains at least one NA value
population_with_basic_handwashing_facilities <- na.omit(population_with_basic_handwashing_facilities)

# Remove duplicates
population_with_basic_handwashing_facilities <- population_with_basic_handwashing_facilities%>%
  distinct()

#check for empty row
any(is.na(mortality_rate_unintentional_poisoning))

population_with_basic_handwashing_facilities
```

## Joining all 4 indicators

```{r}

countries_tb <- left_join(
  mortality_rate_unintentional_poisoning,
  population_with_basic_handwashing_facilities,
  by = join_by(country, iso)
)
  
countries_tb <- left_join(
  countries_tb,
  mortality_rate_unsafe_water,
  by = join_by(iso)
) 
  
countries_tb <- left_join(
  countries_tb,
  proportion_of_safe_water,
  by = join_by(iso, urbanisation)
) |>  
  mutate(
    iso = case_match(
      iso,
      "COD" ~ "ZAR",
      "ROU" ~ "ROM",
      "TLS" ~ "TMP",
      "XKX" ~ "KSV",
      .default = iso
    )
  )

names(countries_tb)
```

## Clean data

Remove certain columns and rename column for cleaner a look

```{r}
clean_datatable <- select(countries_tb, 
                          -code.y, -code.x,
                          -region.y, -region.x,
                          -code.x.x, code.y.y, 
                          -country.x, -country.y,
                          -region.x.x, -region.y.y, 
                          -iso)  
# Rearrange
clean_datatable <- clean_datatable %>%
  select(country, 
         urbanisation, 
         gender, 
         handwash_access,  
         sanitation_access, 
         MR_poisoning, 
         MR_unsafe_water)

datatable(clean_datatable)
```

## Correlation between 4 indicators

```{r}
# filter gender of both sexes to reduce duplicates
countries_tb <- countries_tb |>
  filter(gender == "Both sexes") |>
  na.omit(countries_tb)
countries_tb
```

```{r}
countries_tb_subset <- select(countries_tb, MR_poisoning, MR_unsafe_water, handwash_access, sanitation_access,urbanisation,country.x)

# Display the subsetted data
print(countries_tb_subset)
```

### GGplot stuff, can delete

```{r}
# Generate Correlation between all MR_unsafe_water,MR_poisoning, handwash_access and sanitation_access

#Correlation between MR_unsafe_water vs handwash_access
cor_unsafe_water_handwash <- cor(countries_tb$MR_unsafe_water, countries_tb$handwash_access)

#Correlation between MR_unsafe_water vs sanitation_access
cor_unsafe_water_sanitation <- cor(countries_tb$MR_unsafe_water, countries_tb$sanitation_access)

#Correlation between MR_unsafe_water vs MR_poisoning
cor_unsafe_water_poisoning <- cor(countries_tb$MR_unsafe_water, countries_tb$MR_poisoning)

#Correlation between handwash_access vs sanitation_access
cor_handwash_sanitation <- cor(countries_tb$handwash_access, countries_tb$sanitation_access)

#Correlation between MR_poisoning vs sanitation_access
cor_sanitation_poisoning <- cor(countries_tb$sanitation_access, countries_tb$MR_poisoning)

#Correlation between handwash_access vs MR_poisoning
cor_handwash_poisoning <- cor(countries_tb$handwash_access, countries_tb$MR_poisoning)
```

### safe_water vs MR_poisoning (can delete)

```{r}
library(plotly)

# Scatter plot for MR_unsafe_water vs sanitation_access
plot1 <- ggplot(countries_tb, aes(x = MR_unsafe_water, y = sanitation_access)) +
  geom_point(aes(color = urbanisation, text = paste("Country:", country))) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Mortality Rate due to unsafe water", y = "Sanitation Access", 
       title = "Scatter plot of MR_unsafe_water vs Sanitation Access") +
  annotate("text", x = Inf, y = Inf, label = paste("Correlation: ", round(cor_unsafe_water_sanitation, 2)), 
           hjust = 1.1, vjust = 1.5, size = 5, color = "red") + # cannot render in ggplot
  theme_minimal()

# Scatter plot for MR_unsafe_water vs MR_poisoning
plot2 <- ggplot(countries_tb, aes(x = MR_unsafe_water, y = MR_poisoning)) +
  geom_point(aes(color = urbanisation, text = paste("Country:", country))) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Mortality Rate due to unsafe water", y = "Mortality Rate due to poisoning", 
       title = "Scatter plot of MR_unsafe_water vs MR_poisoning") +
  annotate("text", x = Inf, y = Inf, label = paste("Correlation: ", round(cor_unsafe_water_poisoning, 2)), 
           hjust = 1.1, vjust = 1.5, size = 5, color = "red") + # cannot render in ggplot
  theme_minimal()

# Scatter plot for handwash_access vs sanitation_access
plot3 <- ggplot(countries_tb, aes(x = handwash_access, y = sanitation_access)) +
  geom_point(aes(color = urbanisation, text = paste("Country:", country))) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Handwashing Access", y = "Sanitation Access", 
       title = "Scatter plot of Handwashing Access vs Sanitation Access") +
  annotate("text", x = Inf, y = Inf, label = paste("Correlation: ", round(cor_handwash_sanitation, 2)), 
           hjust = 1.1, vjust = 1.5, size = 5, color = "red") + # cannot render in ggplot
  theme_minimal()

# Scatter plot for handwash_access vs MR_poisoning
plot4 <- ggplot(countries_tb, aes(x = handwash_access, y = MR_poisoning)) +
  geom_point(aes(color = urbanisation, text = paste("Country:", country))) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Handwashing Access", y = "Mortality Rate due to poisoning", 
       title = "Scatter plot of Handwashing Access vs MR_poisoning") +
  annotate("text", x = Inf, y = Inf, label = paste("Correlation: ", round(cor_handwash_poisoning, 2)), 
           hjust = 1.1, vjust = 1.5, size = 5, color = "red") + # cannot render in ggplot
  theme_minimal()

# Scatter plot for sanitation_access vs MR_poisoning
plot5 <- ggplot(countries_tb, aes(x = MR_poisoning, y = sanitation_access)) +
  geom_point(aes(color = urbanisation, text = paste("Country:", country))) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Sanitation Access", y = "Mortality Rate due to poisoning", 
       title = "Scatter plot of Sanitation Access vs MR_poisoning") +
  annotate("text", x = Inf, y = Inf, label = paste("Correlation: ", round(cor_sanitation_poisoning, 2)), 
           hjust = 1.1, vjust = 1.5, size = 5, color = "red") + # cannot render in ggplot
  theme_minimal()

plot1
plot2
plot3
plot4
plot5
```

### Experiment with scatterplot matrix

```{r}
library(GGally)
library(ggplot2)

#set axis names
countries_tb_subset_corr4 <- select(countries_tb_subset, MR_unsafe_water, MR_poisoning, handwash_access, sanitation_access, urbanisation)
colnames(countries_tb_subset_corr4) <- c("Unsafe Water Mortality Rate",
                                         "Poisoning Mortality",
                                         "Handwashing Access (%)",
                                         "Sanitation Access (%)",
                                         "Urbanisation")

#change to factor for colour

countries_tb_subset_corr4$Urbanisation <- as.factor(countries_tb_subset_corr4$Urbanisation)

plot <- ggpairs(data = countries_tb_subset_corr4,
                columns = 1:4,
                upper = list(continuous = "cor"),
                lower = list(continuous = "smooth", se=FALSE),
                diag = list(continuous = "bar", bin=15),
                mapping = aes(color = Urbanisation)) +
  theme_minimal()

plot
```

### Different Scatter plot matrix

```{r}
library(psych)

countries_tb_subset_corr4 <- select(countries_tb_subset, MR_unsafe_water, MR_poisoning, handwash_access, sanitation_access, urbanisation)

# Rename the columns
colnames(countries_tb_subset_corr4) <- c("Unsafe Water Mortality Rate", 
                                         "Poisoning Mortality",
                                         "Handwashing Access (%)", 
                                         "Sanitation Access (%)",
                                         "Urbanisation")

# Make urbanisation as a factor for colourisation
countries_tb_subset_corr4$Urbanisation <- as.factor(countries_tb_subset_corr4$Urbanisation)

# Map urbanisation to colors
color_mapping <- c("All areas" = "red", "Urban" = "blue", "Rural" = "green") # Adjust to your actual factor levels and desired colors
colors <- color_mapping[countries_tb_subset_corr4$Urbanisation]

# Create scatterplot matrix without colors
plot <- pairs.panels(countries_tb_subset_corr4[, 1:4],
                     hist.col = "#00AFBB",
                     bg = "transparent")
```
